# ============================================
# ExploreSG Fleet Service - Main Configuration
# ============================================
spring.application.name=exploresg-fleet-service

# ============================================
# Server Configuration
# ============================================
server.port=${SERVER_PORT:8080}

# ============================================
# Database Configuration
# ============================================
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Transaction Configuration - Critical for Reservation System
spring.transaction.default-timeout=${SPRING_TRANSACTION_DEFAULT_TIMEOUT:10}
spring.jpa.properties.jakarta.persistence.lock.timeout=${JPA_LOCK_TIMEOUT:3000}

# ============================================
# Spring Security OAuth2 Resource Server
# ============================================
spring.security.oauth2.resourceserver.jwt.issuer-uri=${OAUTH2_JWT_ISSUER_URI:https://accounts.google.com}
spring.security.oauth2.resourceserver.jwt.audiences=${OAUTH2_JWT_AUDIENCES}

# ============================================
# Custom JWT Configuration
# ============================================
application.security.jwt.secret-key=${JWT_SECRET_KEY}
application.security.jwt.expiration=${JWT_EXPIRATION:86400000}
application.security.jwt.refresh-token.expiration=${JWT_REFRESH_EXPIRATION:604800000}

# ============================================
# Logging Configuration
# ============================================
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.com.exploresg=${LOGGING_LEVEL_COM_EXPLORESG:INFO}
logging.level.org.springframework.security=${LOGGING_LEVEL_SPRING_SECURITY:INFO}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%X{correlationId:-NO_CORRELATION_ID}] - %msg%n

# Logging file configuration (optional for local development)
logging.file.path=${LOG_PATH:logs}
logging.file.name=${LOG_PATH:logs}/exploresg-fleet-service.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB

# ============================================
# Scheduled Tasks Configuration (Reservation Cleanup)
# ============================================
spring.task.scheduling.pool.size=${SPRING_TASK_SCHEDULING_POOL_SIZE:2}

# ============================================
# Actuator & Monitoring
# ============================================
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:when-authorized}
management.metrics.export.prometheus.enabled=true

# ============================================
# CORS Configuration
# ============================================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true} 